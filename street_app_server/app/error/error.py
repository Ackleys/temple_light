#!/usr/bin/env python3
# coding: utf8
# 20170220 anChaOs


# common
ERROR_OK = 0
ERROR_FAIL = 1
ERROR_PARAM = 2

# auth
ERROR_NO_USER = 1001
ERROR_WRONG_PSWD = 1002
ERROR_NO_LOGIN = 1003
ERROR_USER_CANNOT_LOGIN = 1004
ERROR_PHONE_EXISTS = 1005
ERROR_EMAIL_EXISTS = 1006
ERROR_NAME_EXISTS = 1007

# pay
ERROR_PAY_NOT_FOUND = 2001
ERROR_NOT_PAY = 2002
ERROR_WITHDRAW_FEE = 2003
ERROR_PAY_TO_USER_FAIL = 2004
ERROR_PAY_MODE_NOT_FOUND = 2005
ERROR_BALANCE_NOT_ENOUGH = 2006
ERROR_REFUND = 2007
ERROR_ALREADY_PAID = 2008
ERROR_REFUND_NOT_AVAILABLE = 2009
ERROR_PAY_TOO_FREQUENCE = 2010

# device
ERROR_ALREADY_START = 3001
ERROR_RECORD_NOT_FOUND = 3002
ERROR_DEVICE_EXISTS = 3003
ERROR_TOO_MANY_DEVICES = 3004
ERROR_DEVICE_NOT_FOUND = 3005
ERROR_INVALIDATE_IMEI = 3006
ERROR_DEVICE_NO_PERMISSION = 3007
ERROR_PAIXING_SIGN = 3008
ERROR_INVALIDATE_RATE = 3009
ERROR_DEVICE_NOT_SUP_NOPAY = 3010
ERROR_NOT_DISTRIBUTION = 3011
ERROR_NOPAY_NOT_ENOUGH = 3012
ERROR_DEVICE_NOT_NOPAY = 3013

# product
ERROR_PRODUCT_NOT_FOUND = 4001
ERROR_COIN_NOT_ENOUGH = 4002
ERROR_INVALIDATE_PRICE = 4003
ERROR_AD_NOT_FOUND = 4004
ERROR_IMG_SIZE_NOT_MATCH = 4005

# agent
ERROR_AGENT_NOT_FOUND = 5001
ERROR_AGENT_NO_PERMISSION = 5002
ERROR_SETTING_WITH_DRAW = 5003
ERROR_SETTING_WITHDRAW_FEE = 5004
ERROR_ADVERTISER_NOT_FOUND = 5005
ERROR_GOD_NOT_FOUND = 5006

# wechat
ERROR_WECHAT_CONFIG_EXISTS = 6001
ERROR_WECHAT_NOT_SUBSCRIBE = 6002

# ali
ERROR_ALI_CONFIG_EXISTS = 7001

# mqtt
ERROR_TIMEOUT = 8001
ERROR_DEVICE_BUSY = 8002

# db
ERROR_INSERT_USER = 9001
ERROR_INSERT_WECHAT_USER = 9002
ERROR_INSERT_ALI_USER = 9003

# api
ERROR_API_KEY = 10001

# coupon
ERROR_COUPON_NOT_FOUND = 11001
ERROR_COUPON_NO_AVAILABLE = 11002
ERROR_COUPON_RECEIPT_ALREADY_USED = 110003

# 这边是错误码对应的错误信息, 东西是保存再后端的
error_info = {
  ERROR_OK: ('操作成功', 200),
  ERROR_FAIL: ('操作失败', 500),
  ERROR_PARAM: ('参数错误', 400),
  ERROR_INSERT_USER: ('创建用户失败', 422),
  ERROR_INSERT_WECHAT_USER: ('创建微信用户失败', 422),
  ERROR_NO_LOGIN: ('未登录', 401),
  ERROR_PAY_NOT_FOUND: ('订单不存在', 422),
  ERROR_NOT_PAY: ('订单未支付', 422),
  ERROR_ALREADY_START: ('该设备已经启动', 422),
  ERROR_RECORD_NOT_FOUND: ('设备开始记录不存在', 422),
  ERROR_DEVICE_EXISTS: ('设备已被添加', 422),
  ERROR_TOO_MANY_DEVICES: ('一次性最多只能添加999个设备', 422),
  ERROR_USER_CANNOT_LOGIN: ('普通用户无法登录', 422),
  ERROR_NO_USER: ('用户不存在', 422),
  ERROR_WRONG_PSWD: ('密码错误', 401),
  ERROR_DEVICE_NOT_FOUND: ('设备不存在', 422),
  ERROR_PRODUCT_NOT_FOUND: ('产品不存在', 422),
  ERROR_INVALIDATE_IMEI: ('IMEI填写有误', 422),
  ERROR_TIMEOUT: ('设备连接超时', 422),
  ERROR_AGENT_NOT_FOUND: ('代理不存在', 422),
  ERROR_AGENT_NO_PERMISSION: ('代理没有权限', 422),
  ERROR_PHONE_EXISTS: ('手机号已存在', 422),
  ERROR_EMAIL_EXISTS: ('邮箱已存在', 422),
  ERROR_WITHDRAW_FEE: ('取现金额错误', 422),
  ERROR_PAY_TO_USER_FAIL: ('取现失败', 422),
  ERROR_DEVICE_BUSY: ('设备正在运行', 422),
  ERROR_DEVICE_NO_PERMISSION: ('设备没有权限', 403),
  ERROR_SETTING_WITH_DRAW: ('取现最小金额设置错误', 422),
  ERROR_PAIXING_SIGN: ('签名错误', 422),
  ERROR_PAY_MODE_NOT_FOUND: ('支付类型错误', 422),
  ERROR_WECHAT_CONFIG_EXISTS: ('微信公众号已存在', 422),
  ERROR_INVALIDATE_RATE: ('非法的提成设置', 422),
  ERROR_COIN_NOT_ENOUGH: ('游戏币不足', 422),
  ERROR_NAME_EXISTS: ('用户名已存在', 422),
  ERROR_WECHAT_NOT_SUBSCRIBE: ('未关注公众号', 422),
  ERROR_DEVICE_NOT_SUP_NOPAY: ('该设备不支持无支付启动', 422),
  ERROR_INSERT_ALI_USER: ('创建阿里用户失败', 422),
  ERROR_BALANCE_NOT_ENOUGH: ('余额不足', 422),
  ERROR_ALI_CONFIG_EXISTS: ('支付宝账号已存在', 422),
  ERROR_NOT_DISTRIBUTION: ('设备未完成分配', 422),
  ERROR_REFUND: ('退款失败', 422),
  ERROR_NOPAY_NOT_ENOUGH: ('免费体验次数不足', 422),
  ERROR_INVALIDATE_PRICE: ('非法的金额', 422),
  ERROR_API_KEY: ('您暂时无权调用该接口', 422),
  ERROR_SETTING_WITHDRAW_FEE: ('取现手续费设置错误', 422),
  ERROR_AD_NOT_FOUND: ('未找到该条广告记录', 422),
  ERROR_IMG_SIZE_NOT_MATCH: ('图片尺寸不符', 422),
  ERROR_ADVERTISER_NOT_FOUND: ('广告商不存在', 422),
  ERROR_COUPON_NOT_FOUND: ('优惠券不存在', 422),
  ERROR_ALREADY_PAID: ('支付已完成', 422),
  ERROR_COUPON_NO_AVAILABLE: ('暂无可用优惠券', 422),
  ERROR_COUPON_RECEIPT_ALREADY_USED: ('优惠券已被使用', 422),
  ERROR_REFUND_NOT_AVAILABLE: ('该订单暂时不允许退款', 422),
  ERROR_PAY_TOO_FREQUENCE: ('设备运行或缺料状态，请稍后再付', 422),
  ERROR_DEVICE_NOT_NOPAY: ('该设备不是免费设备', 422),
  ERROR_GOD_NOT_FOUND: ('管理员不存在', 422),
}

def get_error_info(error_no):
    if error_no in error_info:
        return error_info[error_no]
    else:
        return ("操作失败", 500)

def get_error_status_code(error_no):
    if error_no in error_status_code:
        return error_status_code[error_no]
    else:
        return ""

class ApiError(Exception):
    def __init__(self, msg, error_no=1):
        self.msg = msg
        self.error_no = error_no
        
    def __str__(self):
        return repr(self.msg)